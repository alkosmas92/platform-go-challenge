// Code generated by MockGen. DO NOT EDIT.
// Source: services/asset_service.go

// Package mocksn is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/alkosmas92/platform-go-challenge/internal/app/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAssetService is a mock of AssetService interface.
type MockAssetService struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceMockRecorder
}

// MockAssetServiceMockRecorder is the mock recorder for MockAssetService.
type MockAssetServiceMockRecorder struct {
	mock *MockAssetService
}

// NewMockAssetService creates a new mock instance.
func NewMockAssetService(ctrl *gomock.Controller) *MockAssetService {
	mock := &MockAssetService{ctrl: ctrl}
	mock.recorder = &MockAssetServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssetService) EXPECT() *MockAssetServiceMockRecorder {
	return m.recorder
}

// CreateAsset mocks base method.
func (m *MockAssetService) CreateAsset(ctx context.Context, asset *models.Asset) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAsset", ctx, asset)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAsset indicates an expected call of CreateAsset.
func (mr *MockAssetServiceMockRecorder) CreateAsset(ctx, asset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAsset", reflect.TypeOf((*MockAssetService)(nil).CreateAsset), ctx, asset)
}

// DeleteAsset mocks base method.
func (m *MockAssetService) DeleteAsset(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAsset", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAsset indicates an expected call of DeleteAsset.
func (mr *MockAssetServiceMockRecorder) DeleteAsset(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAsset", reflect.TypeOf((*MockAssetService)(nil).DeleteAsset), ctx, id)
}

// GetAssetByID mocks base method.
func (m *MockAssetService) GetAssetByID(ctx context.Context, id string) (*models.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAssetByID", ctx, id)
	ret0, _ := ret[0].(*models.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetByID indicates an expected call of GetAssetByID.
func (mr *MockAssetServiceMockRecorder) GetAssetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAssetByID", reflect.TypeOf((*MockAssetService)(nil).GetAssetByID), ctx, id)
}

// UpdateAsset mocks base method.
func (m *MockAssetService) UpdateAsset(ctx context.Context, id string, asset *models.Asset) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAsset", ctx, id, asset)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAsset indicates an expected call of UpdateAsset.
func (mr *MockAssetServiceMockRecorder) UpdateAsset(ctx, id, asset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAsset", reflect.TypeOf((*MockAssetService)(nil).UpdateAsset), ctx, id, asset)
}
